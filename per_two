vector<vector<int>>ans;
   void vectorcombination(int ind,int n,int N,vector<int> &ds,vector<int>&candidates)
   {
       if(N==0)
       {
           ans.push_back(ds);
           return;
       }
       for(int i=ind;i<n;i++)
       {
           if(i>ind && candidates[i]==candidates[i-1])
               continue;
           if(candidates[i]>N)
               break;
           ds.push_back(candidates[i]);
           vectorcombination(i+1,n,N-candidates[i],ds,candidates);
           ds.pop_back();
       }
   }

    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {

      vector<int>v;
        int n=candidates.size();
       sort(candidates.begin(), candidates.end());
        vectorcombination(0,n,target,v,candidates);
        return ans;
    }
};

@nimishakavivani
 
 
